name: Linux x86_64 MUSL Release

on:
  push:
    branches: [ "master" ]
    tags: [ "v*.*.*" ]
  workflow_run:
    workflows: ["Verify GPG Signature"]
    types: 
      - completed
    branches: [ "testing" ]

permissions:
  contents: write
  packages: write

jobs:
  standard:
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl]
        features: ["offline", "full", "dev"]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apk update
          apk add musl-dev gcc pkgconf git \
          gtk4-dev libadwaita-dev glib-dev openssl-dev

      - name: Install Rust
        run: |
          rustup component add clippy rustfmt
          rustup target add ${{ matrix.target }}

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy
        run: |
          export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
          cargo clippy --no-deps --verbose --locked --features "${{ matrix.features }}" --target ${{ matrix.target }} -- -D warnings

      - name: Run cargo check
        run: |
          export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
          cargo check --verbose --locked --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Build
        run: |
          export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
          cargo build --release --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Run tests
        run: |
          export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
          cargo test --release --locked --verbose --no-fail-fast --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Prepare exec
        run: |
          strip target/${{ matrix.target }}/release/QR2M
          mkdir -p lab7041
          cp target/${{ matrix.target }}/release/QR2M lab7041/QR2M-${{ matrix.features }}

      - name: Compress executable
        run: |
          tar -czf lab7041/QR2M-${{ matrix.features }}-${{ matrix.target }}.tar.gz -C lab7041 QR2M-${{ matrix.features }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QR2M-${{ matrix.features }}-${{ matrix.target }}
          path: lab7041/QR2M-${{ matrix.features }}-${{ matrix.target }}.tar.gz
          retention-days: 5

      - name: Upload to GitHub Releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: lab7041/QR2M-${{ matrix.features }}-${{ matrix.target }}.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}