name: Linux x86_64 GNU Release

on:
  push:
    branches: [ "testing" ]
    # tags: [ "v*.*.*" ]
  # workflow_run:
  #   workflows: ["Verify GPG Signature"]
  #   types: 
  #     - completed
  #   branches: [ "master" ]

permissions:
  contents: write
  packages: write

jobs:
  standard:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
        features: ["offline", "full", "dev"]
      fail-fast: false

    steps:
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-4-dev libadwaita-1-dev pkg-config libssl-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy rustfmt
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy --no-deps --verbose --locked --features "${{ matrix.features }}" --target ${{ matrix.target }} -- -D warnings

      - name: Run Cargo Check
        run: cargo check --verbose --locked --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Build
        run: cargo build --release --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --locked --verbose --no-fail-fast --features "${{ matrix.features }}" --target ${{ matrix.target }}

      - name: Versioning
        run: |
          # VERSION_NUMBER=$(grep -oP '# version: \K[0-9]+\.[0-9]+\.[0-9]+' Changelog.md)
          # VERSION_NUMBER=$(head -n 1 Changelog.md | cut -d ':' -f 2- | tr -d ' ')
          VERSION_NUMBER=$(head -n 1 Changelog.md | cut -d ':' -f 2- | tr -d ' #version')
          echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV

      - name: Prepare release files
        run: |
          strip target/${{ matrix.target }}/release/QR2M
          mkdir -p LAB7041
          cp target/${{ matrix.target }}/release/QR2M LAB7041/QR2M-${VERSION_NUMBER}-${{ matrix.features }}
          cp Changelog.md LAB7041/Changelog.md
          cp LICENSE.txt LAB7041/LICENSE.txt
          sync

      - name: Compress release
        run: |
          tar -czf LAB7041/QR2M-${VERSION_NUMBER}-${{ matrix.features }}-${{ matrix.target }}.tar.gz -C LAB7041 .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QR2M-${VERSION_NUMBER}-${{ matrix.features }}-${{ matrix.target }}
          path: LAB7041/QR2M-${VERSION_NUMBER}-${{ matrix.features }}-${{ matrix.target }}.tar.gz
          retention-days: 7

      - name: Upload to GitHub Releases
        # if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            LAB7041/QR2M-${VERSION_NUMBER}-${{ matrix.features }}-${{ matrix.target }}.tar.gz
            Changelog.md
            LICENSE.txt
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}