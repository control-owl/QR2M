name: Check Linux x86_64 MUSL

on:
  workflow_run:
    workflows: ["Verify GPG Signature"]
    types: 
      - completed
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  standard:
    name: ${{ matrix.features }}-${{ matrix.target }}
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl ]
        features: [ "offline", "full", "dev" ]
      fail-fast: false

    steps:
      - name: Install system dependencies
        run: |
          apk update
          apk add --no-cache \
            musl-dev \
            pkgconf \
            glib-dev \
            gtk4-dev \
            libadwaita-dev \
            openssl-dev \
            git \
            gcc \
            g++ \
            make \
            cmake

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Install Rust
        run: |
          rustup target add ${{ matrix.target }}
          rustup component add clippy rustfmt

      - name: Configure cross-compilation
        run: |
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV

##Pause
#      - name: Check code
#        run: |
#          cargo fmt --
#          cargo clippy --no-deps --verbose --locked --features "${{ matrix.features }}" --target ${{ matrix.target }} -- -D warnings

      - name: Build
        run: cargo build --release --features "${{ matrix.features }}"

##Pause
#      - name: Run tests
#        run: cargo test --release --locked --verbose --no-fail-fast --features "${{ matrix.features }}"

      - name: Verify static linking
        run: |
          ldd target/x86_64-unknown-linux-musl/release/<your_binary_name> || echo "Static binary confirmed"